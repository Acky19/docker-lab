pipeline {
    agent any

    tools {
        maven 'maven3.9.9'
        jdk 'jdk8'
    }

    environment {
        sonar_token = credentials('jenkins-sonar-token') // SONAR_TOKEN_ID should be the ID of the Jenkins credentials storing your SonarQube token
    }

    parameters {
        string(name: 'ProjectKey', defaultValue: 'petclinic', description: 'SonarQube project key')
        string(name: 'ProjectName', defaultValue: 'petclinic', description: 'SonarQube project name')
        string(name: 'SonarHostUrl', defaultValue: 'http://192.168.92.182:9000', description: 'SonarQube server URL')
    }

    stages {
        stage('Clone') {
            steps {
                git branch: 'master', url: 'https://github.com/shegerbootcamp/docker-lab.git'
            }
        }

        stage('Compile and Test') {
            steps {
                dir('petclinic-app') { // Ensure you are in the correct directory
                    sh 'mvn clean install -DskipTests=true'
                }
            }
        }

        stage('Sonar Static Code Analysis') {
            steps {
                dir('petclinic-app') { // Ensure SonarQube runs within the project directory
                    withCredentials([string(credentialsId: 'jenkins-sonar-token', variable: 'sonar_token')]) {
                        sh """
                        mvn sonar:sonar \
                            -Dsonar.projectKey=${params.ProjectKey} \
                            -Dsonar.projectName='${params.ProjectName}' \
                            -Dsonar.host.url=${params.SonarHostUrl} \
                            -Dsonar.login=${sonar_token}
                        """
                    }
                }
            }
        }
    }
}